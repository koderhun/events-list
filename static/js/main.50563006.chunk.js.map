{"version":3,"sources":["store/reducers/settings.js","store/reducers/reducers.js","store/reducers/event.js","store/actions/events/eventsType.js","store/actions/settings/settingsType.js","store/actions/events/eventsAction.js","Modal/Modal.js","ModalDelete/ModalDelete.js","App.js","store/actions/settings/settingsAction.js","serviceWorker.js","store/store.js","index.js"],"names":["initialDefault","checkEventAll","searchQuery","combineReducers","eventlist","state","action","newState","type","payload","checked","settings","getEvents","addEvent","Modal","name","city","date","changeName","e","setState","target","value","changeDate","changeCity","appendEvent","props","handleClose","this","className","onClick","onChange","placeholder","pattern","map","v","k","key","selected","React","Component","mapDispatchToProps","ModalWitchRedux","connect","undefined","ModalDelete","handleDelete","console","log","replaceEvents","filter","ModalDeleteWitchRedux","store","App","handleOpenModal","modal","handleCloseModal","handleCloseModalDelete","unCheckEventAll","modalDelete","handleCheck","checkEvent","unCheckEvent","parseInt","handleCheckAll","handleSearch","toLowerCase","indexOf","AppWithRedux","Boolean","window","location","hostname","match","initialStore","createStore","rootReducer","compose","devToolsExtension","__REDUX_DEVTOOLS_EXTENSION__","f","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.50563006.chunk.js","sourcesContent":["import {\n  CHECK_EVENT_ALL,\n  UNCHECK_EVENT_ALL,\n  SEARCH_QUERY\n} from \"../actions/settings/settingsType\";\n\nconst initialDefault = {\n  checkEventAll: false,\n  searchQuery: \"\"\n};\n\nexport const settings = (state = initialDefault, action) => {\n  switch (action.type) {\n    case CHECK_EVENT_ALL:\n      return {\n        ...state,\n        checkEventAll: true\n      };\n\n    case UNCHECK_EVENT_ALL:\n      return {\n        ...state,\n        checkEventAll: false\n      };\n\n    case SEARCH_QUERY:\n      return {\n        ...state,\n        searchQuery: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { eventlist } from \"./event\";\nimport { settings } from \"./settings\";\n\nexport default combineReducers({\n  eventlist,\n  settings\n});\n\n// selectors\nexport const getEvents = state => {\n  return state.eventlist;\n};\n\nexport const getSettings = state => {\n  return state.settings;\n};\n","import {\n  ADD_EVENT,\n  CHECK_EVENT,\n  UNCHECK_EVENT,\n  REPLACE_EVENTS\n} from \"../actions/events/eventsType\";\n\nexport const eventlist = (state = [], action) => {\n  let newState = [...state];\n  \n  switch (action.type) {\n    case ADD_EVENT:\n      return [...newState, action.payload];\n\n    case REPLACE_EVENTS:\n      return [...action.payload];\n\n    case CHECK_EVENT: {\n      newState[action.payload].checked = true;\n      return newState;\n    }\n\n    case UNCHECK_EVENT: {\n      newState[action.payload].checked = false;\n      return newState;\n    }\n\n    default:\n      return newState;\n  }\n};\n","export const ADD_EVENT = \"ADD_EVENT\";\nexport const REPLACE_EVENTS = \"REPLACE_EVENTS\";\nexport const CHECK_EVENT = \"CHECK_EVENT\";\nexport const UNCHECK_EVENT = \"UNCHECK_EVENT\";\n","export const CHECK_EVENT_ALL = \"CHECK_EVENT_ALL\";\nexport const UNCHECK_EVENT_ALL = \"UNCHECK_EVENT_ALL\";\nexport const SEARCH_QUERY = \"SEARCH_QUERY\";\n","import { ADD_EVENT, CHECK_EVENT, UNCHECK_EVENT, REPLACE_EVENTS} from \"./eventsType\"\n\nexport const addEvent = payload => {\n  return {\n    type: ADD_EVENT,\n    payload\n  }\n}\n\nexport const replaceEvents = payload => {\n  return {\n    type: REPLACE_EVENTS,\n    payload\n  }\n}\n\nexport const checkEvent = payload => {\n  return {\n    type: CHECK_EVENT,\n    payload\n  }\n}\n\nexport const unCheckEvent = payload => {\n  return {\n    type: UNCHECK_EVENT,\n    payload\n  }\n}","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {addEvent} from '../store/actions/events/eventsAction'\nimport \"./Modal.scss\";\n\nclass Modal extends React.Component {\n  state = {\n    name: \"\",\n    city: \"\",\n    date: \"\"\n  };\n\n  componentDidMount() {}\n\n  changeName = e => {\n    this.setState({\n      name: e.target.value\n    });\n  };\n\n  changeDate = e => {\n    this.setState({\n      date: e.target.value\n    });\n  };\n\n  changeCity = e => {\n    this.setState({\n      city: e.target.value\n    });\n  };\n\n  appendEvent = () => {\n    const { addEvent } = this.props;\n\n    addEvent(this.state);\n    this.props.handleClose();\n  };\n\n  render() {\n    const { name, city, date } = this.state;\n    const { handleClose } = this.props;\n\n    const cityArr = [\"Саратов\", \"Ижевск\", \"Киев\", \"Минск\", \"Челябинск\"];\n\n    return (\n      <div className=\"modalWrapper\">\n        <div onClick={handleClose} className=\"backdrop\"></div>\n        <div className=\"Modal\">\n          <div className=\"Modal__header\">\n            <h1>Добавить мероприятие</h1>\n          </div>\n          <div className=\"Modal__content\">\n            <input\n              onChange={this.changeName}\n              value={name}\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Название\"\n            />\n            <input\n              onChange={this.changeDate}\n              value={date}\n              type=\"date\"\n              pattern=\"\\d{1,2}.d{1,2}.d{4}\"\n              className=\"form-control\"\n              placeholder=\"Дата\"\n            />\n            <select onChange={this.changeCity} className=\"form-control\">\n              {cityArr.map((v, k) => {\n                if (v === city) {\n                  return (\n                    <option key={k} value={v} selected>\n                      {v}\n                    </option>\n                  );\n                } else {\n                  return (\n                    <option key={k} value={v}>\n                      {v}\n                    </option>\n                  );\n                }\n              })}\n            </select>\n          </div>\n          <div className=\"Modal__footer\">\n            <button onClick={handleClose} className=\"btn btn-transparent\">\n              Отмена\n            </button>\n            <button onClick={this.appendEvent} className=\"btn btn-transparent\">\n              Добавить\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = undefined\n\nconst mapDispatchToProps = {\n  addEvent: addEvent\n};\n\nconst ModalWitchRedux = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Modal);\n\nexport default ModalWitchRedux;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addEvent, replaceEvents } from \"../store/actions/events/eventsAction\";\nimport \"./ModalDelete.scss\";\nimport { getEvents } from \"../store/reducers/reducers\";\n\nclass ModalDelete extends React.Component {\n  state = {};\n\n  handleDelete = () => {\n    console.log(\"del\");\n    const { eventlist, replaceEvents } = this.props;\n\n    let newEventList = eventlist.filter(v => {\n      if (v.checked === false) {\n        return true;\n      }\n      return false\n    });\n\n    replaceEvents(newEventList);\n\n    this.props.handleClose();\n  };\n\n  render() {\n    console.log(\"t\", this.props);\n    const { handleClose } = this.props;\n\n    return (\n      <div className=\"ModalDeleteWrapper\">\n        <div onClick={handleClose} className=\"backdrop\"></div>\n        <div className=\"ModalDelete\">\n          <div className=\"ModalDelete__header\">\n            <h1>Удалить мероприятия</h1>\n          </div>\n          <div className=\"ModalDelete__content\"></div>\n          <div className=\"ModalDelete__footer\">\n            <button onClick={handleClose} className=\"btn btn-transparent\">\n              Отмена\n            </button>\n            <button onClick={this.handleDelete} className=\"btn btn-transparent\">\n              Удалить\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    eventlist: getEvents(store)\n  };\n};\n\nconst mapDispatchToProps = {\n  addEvent: addEvent,\n  replaceEvents: replaceEvents,\n};\n\nconst ModalDeleteWitchRedux = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ModalDelete);\n\nexport default ModalDeleteWitchRedux;\n","import React from \"react\";\nimport \"./App.scss\";\nimport {connect} from \"react-redux\"\nimport { getEvents, getSettings } from \"./store/reducers/reducers\";\nimport {addEvent, checkEvent, unCheckEvent} from \"./store/actions/events/eventsAction\"\nimport {unCheckEventAll, checkEventAll, searchQuery} from './store/actions/settings/settingsAction'\n\n\nimport Modal from \"./Modal/Modal\";\nimport ModalDelete from \"./ModalDelete/ModalDelete\";\n\nclass App extends React.Component {\n  state = {\n  };\n\n  componentDidMount() {\n    const { addEvent} = this.props;\n\n    addEvent({\n      name: \"Стрижка сусликов\",\n      date: \"20.06.19\",\n      city: \"Саратов\",\n      checked: false\n    });\n\n    addEvent({\n      name: \"Гражная распродажа\",\n      date: \"30.06.19\",\n      city: \"Киев\",\n      checked: false\n    });\n\n    addEvent({\n      name: \"Гражная распродажа\",\n      date: \"30.06.19\",\n      city: \"Киев\",\n      checked: false\n    });\n\n    addEvent({\n      name: \"Гражная распродажа\",\n      date: \"30.06.19\",\n      city: \"Киев\",\n      checked: false\n    });\n  }\n\n  handleOpenModal = () => {\n    this.setState({\n      modal: true\n    });\n  };\n\n  handleCloseModal = () => {\n    this.setState({\n      modal: false\n    });\n  };\n\n  handleCloseModalDelete = () => {\n    console.log(\"close delete\");\n    this.props.unCheckEventAll();\n    this.setState({\n      modalDelete: false\n    });\n  };\n\n  handleCheck = e => {\n    const { checkEvent, unCheckEvent } = this.props;\n\n    if (!e.target.checked) {\n      unCheckEvent(parseInt(e.target.value));\n    } else {\n      checkEvent(parseInt(e.target.value));\n    }\n  };\n\n  handleCheckAll = e => {\n    const {\n      checkEvent,\n      unCheckEvent,\n      eventlist,\n      checkEventAll,\n      unCheckEventAll\n    } = this.props;\n\n    if (e.target.checked) {\n      eventlist.map((v, k) => {\n        checkEvent(parseInt(k));\n        return false\n      });\n      checkEventAll();\n    } else {\n      eventlist.map((v, k) => {\n        unCheckEvent(parseInt(k));\n        return false\n      });\n      unCheckEventAll();\n    }\n  };\n\n  handleDelete = () => {\n    this.setState({\n      modalDelete: true\n    });\n  };\n\n  handleSearch = e => {\n    const { searchQuery } = this.props;\n    searchQuery(e.target.value);\n  };\n\n  render() {\n    console.log(\"checkEventAll\", this.props.settings);\n    let { eventlist, settings } = this.props;\n    let { searchQuery } = settings;\n    let { modal, modalDelete } = this.state;\n\n    return (\n      <div className=\"App\">\n        {modal && <Modal handleClose={this.handleCloseModal} />}\n        {modalDelete && (\n          <ModalDelete handleClose={this.handleCloseModalDelete} />\n        )}\n        <header className=\"header\">\n          <h1>Мероприятия</h1>\n        </header>\n        <section className=\"list\">\n          <div className=\"list__header\">\n            <div className=\"list__header-control\">\n              <button\n                onClick={this.handleDelete}\n                className=\"btn btn-transparent\"\n              >\n                -\n              </button>\n              <button\n                onClick={this.handleOpenModal}\n                className=\"btn btn-transparent\"\n              >\n                +\n              </button>\n            </div>\n            <div className=\"list__search\">\n              <input\n                value={searchQuery}\n                onChange={this.handleSearch}\n                type=\"text\"\n                className=\"form-control list__search-input\"\n                placeholder=\"Поиск\"\n              />\n            </div>\n          </div>\n          <div className=\"list__content\">\n            <div className=\"list__item list__item--head\">\n              <div className=\"list__item-checkbox\">\n                <label className=\"checkbox\">\n                  <input\n                    onChange={this.handleCheckAll}\n                    checked={settings.checkEventAll}\n                    type=\"checkbox\"\n                  />\n                  <div className=\"cr\"></div>\n                </label>\n              </div>\n              <div className=\"list__item-name\">Название</div>\n              <div className=\"list__item-date\">Дата</div>\n              <div className=\"list__item-location\">Место проведения</div>\n            </div>\n            <div className=\"list__scroll\">\n              {eventlist.map((v, k) => {\n                if (\n                  v.name.toLowerCase().indexOf(searchQuery.toLowerCase()) !== -1\n                ) {\n                  return (\n                    <div key={k} className=\"list__item\">\n                      <div className=\"list__item-checkbox\">\n                        <label className=\"checkbox\">\n                          <input\n                            onChange={this.handleCheck}\n                            value={k}\n                            type=\"checkbox\"\n                            checked={v.checked}\n                          />\n                          <div className=\"cr\"></div>\n                        </label>\n                      </div>\n                      <div className=\"list__item-name\">{v.name}</div>\n                      <div className=\"list__item-date\">{v.date}</div>\n                      <div className=\"list__item-location\">{v.city}</div>\n                    </div>\n                  );\n                }\n                return false\n              })}\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  eventlist: getEvents(store),\n  settings: getSettings(store)\n});\n\nconst mapDispatchToProps = {\n  addEvent: addEvent,\n  checkEvent: checkEvent,\n  unCheckEvent: unCheckEvent,\n  checkEventAll: checkEventAll,\n  unCheckEventAll: unCheckEventAll,\n  searchQuery: searchQuery\n};\n\nlet AppWithRedux = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n\nexport default AppWithRedux;\n","import { CHECK_EVENT_ALL, UNCHECK_EVENT_ALL, SEARCH_QUERY } from \"./settingsType\";\n\n\nexport const checkEventAll = (payload) => {\n  return {\n    type: CHECK_EVENT_ALL,\n    payload \n  }\n}\n\nexport const unCheckEventAll = (payload) => {\n  return {\n    type: UNCHECK_EVENT_ALL,\n    payload\n  }\n}\n\nexport const searchQuery = (payload) => {\n  return {\n    type: SEARCH_QUERY,\n    payload\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, compose } from \"redux\";\nimport rootReducer from './reducers/reducers'\n\nexport default (initialStore) =>\n  createStore(\n    rootReducer,\n    initialStore,\n    compose(\n      window.devToolsExtension ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\n    )\n  );\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport createStore from \"./store/store\";\n\nconst store = createStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}